{"ts":1368782130406,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1368782141968,"patch":[[{"diffs":[[1,"var debug = require('debug')('router'),\n    impl = require('implementjs');\n\n// Two dependencies, an Express HTTP server and a handler\nmodule.exports = function (server, handler) {\n    debug('setting up routes for tempodb...');\n\n    // Validate handler's interface\n    impl.implements(handler, {renderIndex: impl.F});\n    impl.implements(handler, {renderSeries: impl.F});\n\timpl.implements(handler, {renderSeriesData: impl.F});\n    \n    server.get('/', handler.renderIndex);\n    //Tempodb interface\n    server.get('/series', handler.renderSeries);\n    server.get('/series/data', handler.renderSeriesData);\n    \n};\n"]],"start1":0,"start2":0,"length1":0,"length2":612}]],"length":612,"saved":false}
{"ts":1368782147392,"patch":[[{"diffs":[[0,"for "],[-1,"tempodb"],[1,"upload"],[0,"...'"]],"start1":209,"start2":209,"length1":15,"length2":14}]],"length":611,"saved":false}
{"ts":1368782152567,"patch":[[{"diffs":[[0,"    "],[-1,"impl.implements(handler, {renderSeries: impl.F});\n\timpl.implements(handler, {renderSeriesData: impl.F});"],[0,"\n   "]],"start1":316,"start2":316,"length1":112,"length2":8}]],"length":507,"saved":false}
{"ts":1368782155782,"patch":[[{"diffs":[[0,"ndler, {"],[-1,"renderIndex"],[1,"upload"],[0,": impl.F"]],"start1":285,"start2":285,"length1":27,"length2":22}]],"length":502,"saved":false}
{"ts":1368782159210,"patch":[[{"diffs":[[0,"r.get('/"],[1,"upl"],[0,"', handl"]],"start1":330,"start2":330,"length1":16,"length2":19}]],"length":505,"saved":false}
{"ts":1368782159908,"patch":[[{"diffs":[[0,"et('/upl"],[1,"oad"],[0,"', handl"]],"start1":333,"start2":333,"length1":16,"length2":19}]],"length":508,"saved":false}
{"ts":1368782163840,"patch":[[{"diffs":[[0,"x);\n"],[-1,"    //Tempodb interface\n    server.get('/series', handler.renderSeries);\n    server.get('/series/data', handler.renderSeriesData);\n"],[0,"    "]],"start1":365,"start2":365,"length1":139,"length2":8}]],"length":377,"saved":false}
{"ts":1368782165891,"patch":[[{"diffs":[[0,");\n    \n"],[-1,"    \n"],[0,"    serv"]],"start1":308,"start2":308,"length1":21,"length2":16}]],"length":372,"saved":false}
{"ts":1368782168953,"patch":[[{"diffs":[[0,"ler."],[-1,"renderIndex"],[1,"upload"],[0,");\n "]],"start1":346,"start2":346,"length1":19,"length2":14}]],"length":367,"saved":false}
{"ts":1368782185843,"patch":[[{"diffs":[[0,"pload);\n"],[1,"    server.get('/upload', handler.upload);\n"],[0,"    \n};\n"]],"start1":351,"start2":351,"length1":16,"length2":59}]],"length":410,"saved":false}
{"ts":1368782189340,"patch":[[{"diffs":[[0,"pl.F});\n"],[1,"    impl.implements(handler, {upload: impl.F});\n"],[0,"    \n   "]],"start1":303,"start2":303,"length1":16,"length2":64}]],"length":458,"saved":false}
{"ts":1368782211759,"patch":[[{"diffs":[[0,"   server.get('/"],[-1,"upload"],[1,"csv"],[0,"', handler.uploa"]],"start1":365,"start2":365,"length1":38,"length2":35}]],"length":455,"saved":false}
{"ts":1368782216454,"patch":[[{"diffs":[[0,"v', handler."],[-1,"upload"],[1,"displ"],[0,");\n    serve"]],"start1":383,"start2":383,"length1":30,"length2":29}]],"length":454,"saved":false}
{"ts":1368782217865,"patch":[[{"diffs":[[0,"er.displ"],[1,"ayU"],[0,");\n    s"]],"start1":392,"start2":392,"length1":16,"length2":19}]],"length":457,"saved":false}
{"ts":1368782220558,"patch":[[{"diffs":[[0,"displayU"],[1,"ploadform"],[0,");\n    s"]],"start1":395,"start2":395,"length1":16,"length2":25}]],"length":466,"saved":false}
{"ts":1368782222366,"patch":[[{"diffs":[[0,"ayUpload"],[-1,"f"],[1,"F"],[0,"orm);\n  "]],"start1":400,"start2":400,"length1":17,"length2":17}]],"length":466,"saved":false}
{"ts":1368782230225,"patch":[[{"diffs":[[0,"ments(handler, {"],[-1,"u"],[1,"displayU"],[0,"pload"],[1,"Form"],[0,": impl.F});\n    "]],"start1":277,"start2":277,"length1":38,"length2":49}]],"length":477,"saved":false}
{"contributors":[],"silentsave":true,"ts":1368783702287,"patch":[[{"diffs":[[-1,"var debug = require('debug')('router'),\n    impl = require('implementjs');\n\n// Two dependencies, an Express HTTP server and a handler\nmodule.exports = function (server, handler) {\n    debug('setting up routes for upload...');\n\n    // Validate handler's interface\n    impl.implements(handler, {displayUploadForm: impl.F});\n    impl.implements(handler, {upload: impl.F});\n    \n    server.get('/csv', handler.displayUploadForm);\n    server.get('/upload', handler.upload);\n    \n};\n"]],"start1":0,"start2":0,"length1":477,"length2":0}]],"length":0,"saved":false}
{"ts":1368783706828,"patch":[[{"diffs":[[1,"var debug = require('debug')('router'),\n    impl = require('implementjs');\n\n// Two dependencies, an Express HTTP server and a handler\nmodule.exports = function (server, handler) {\n    debug('setting up routes for upload...');\n\n    // Validate handler's interface\n    impl.implements(handler, {displayUploadForm: impl.F});\n    impl.implements(handler, {upload: impl.F});\n    \n    server.get('/csv', handler.displayUploadForm);\n    server.post('/upload', handler.upload);\n    \n};\n"]],"start1":0,"start2":0,"length1":0,"length2":478}]],"length":478,"saved":false}
{"ts":1368783815661,"patch":[[{"diffs":[[-1,"var debug = require('debug')('router'),\n    impl = require('implementjs');\n\n// Two dependencies, an Express HTTP server and a handler\nmodule.exports = function (server, handler) {\n    debug('setting up routes for upload...');\n\n    // Validate handler's interface\n    impl.implements(handler, {displayUploadForm: impl.F});\n    impl.implements(handler, {upload: impl.F});\n    \n    server.get('/csv', handler.displayUploadForm);\n    server.post('/upload', handler.upload);\n    \n};\n"]],"start1":0,"start2":0,"length1":478,"length2":0}]],"length":0,"saved":false}
{"ts":1368783816932,"patch":[[{"diffs":[[1,"var debug = require('debug')('router'),\n    impl = require('implementjs');\n\n// Two dependencies, an Express HTTP server and a handler\nmodule.exports = function (server, handler) {\n    debug('setting up routes for upload...');\n\n    // Validate handler's interface\n    impl.implements(handler, {displayUploadForm: impl.F});\n    impl.implements(handler, {upload: impl.F});\n    \n    server.get('/csv', handler.displayUploadForm);\n    server.get('/upload', handler.upload);\n    \n};\n"]],"start1":0,"start2":0,"length1":0,"length2":477}]],"length":477,"saved":false}
{"contributors":[],"silentsave":true,"ts":1368794149773,"patch":[[{"diffs":[[-1,"var debug = require('debug')('router'),\n    impl = require('implementjs');\n\n// Two dependencies, an Express HTTP server and a handler\nmodule.exports = function (server, handler) {\n    debug('setting up routes for upload...');\n\n    // Validate handler's interface\n    impl.implements(handler, {displayUploadForm: impl.F});\n    impl.implements(handler, {upload: impl.F});\n    \n    server.get('/csv', handler.displayUploadForm);\n    server.get('/upload', handler.upload);\n    \n};\n"]],"start1":0,"start2":0,"length1":477,"length2":0}]],"length":0,"saved":false}
