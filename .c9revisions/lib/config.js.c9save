{"ts":1368606056150,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1368606057925,"patch":[[{"diffs":[[1,"var debug = require('debug')('config'),\npath = require('path'),\nexpress = require('express');\n\n// Export nothing, only extend express' HTTPServer with an \"applyConfiguration\" method\n// (extend HTTPSServer if https is used). Will NOT work with Express 3.0.\nexpress.HTTPServer.prototype.applyConfiguration = function () {\nvar self = this,\nrootDir = path.resolve(__dirname, '..');\n\nthis.configure(function () {\ndebug('setting up common configuration...');\n\n// Configure jade as template engine\nself.set('views', rootDir + '/views');\nself.set('view engine', 'jade');\nself.set(\"view options\", {layout: false});\n\n// Parse the body\nself.use(express.bodyParser());\n\n// Use the method override so that PUT and DELETE can be simulated with a POST\nself.use(express.methodOverride());\n\n// Parse the cookies\nself.use(express.cookieParser());\n\n// Session support, in normal use, put secret in environment var:\n// self.use(express.session({ secret: process.env.MY_SESSION_SECRET }));\nself.use(express.session({ secret: 'hypermegatop really!' }));\n\n// Enable the router\nself.use(self.router);\n\n// Serve static content from \"public\" directory\nself.use(express.static(rootDir + '/public'));\n});\n\nthis.configure('dev', function () {\ndebug('setting up \"dev\" configuration...');\nself.use(express.logger('tiny'));\nself.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\nthis.configure('production', function () {\ndebug('setting up \"production\" configuration...');\nself.use(express.errorHandler());\n});\n}"]],"start1":0,"start2":0,"length1":0,"length2":1505}]],"length":1505,"saved":false}
{"ts":1368606113766,"patch":[[{"diffs":[[0,"on () {\n"],[1,"    "],[0,"var self"]],"start1":312,"start2":312,"length1":16,"length2":20}]],"length":1509,"saved":false}
{"ts":1368606115057,"patch":[[{"diffs":[[0,"= this,\n"],[1,"    "],[0,"rootDir "]],"start1":333,"start2":333,"length1":16,"length2":20}]],"length":1513,"saved":false}
{"ts":1368606117049,"patch":[[{"diffs":[[0," = this,"],[-1,"\n   "],[0," rootDir"]],"start1":332,"start2":332,"length1":20,"length2":16}]],"length":1509,"saved":false}
{"ts":1368606126710,"patch":[[{"diffs":[[0,"me, '..');\n\n"],[1,"    "],[0,"this.configu"]],"start1":371,"start2":371,"length1":24,"length2":28},{"diffs":[[0,"e(function () {\n"],[1,"    "],[0,"debug('setting u"]],"start1":400,"start2":400,"length1":32,"length2":36},{"diffs":[[0,"n...');\n"],[-1,"\n"],[1,"    \n    "],[0,"// Confi"]],"start1":457,"start2":457,"length1":17,"length2":25},{"diffs":[[0," engine\n"],[1,"    "],[0,"self.set"]],"start1":503,"start2":503,"length1":16,"length2":20},{"diffs":[[0," '/views');\n"],[1,"    "],[0,"self.set('vi"]],"start1":542,"start2":542,"length1":24,"length2":28},{"diffs":[[0,"', 'jade');\n"],[1,"    "],[0,"self.set(\"vi"]],"start1":579,"start2":579,"length1":24,"length2":28},{"diffs":[[0,"alse});\n"],[-1,"\n"],[1,"    \n    "],[0,"// Parse"]],"start1":630,"start2":630,"length1":17,"length2":25},{"diffs":[[0,"he body\n"],[1,"    "],[0,"self.use"]],"start1":657,"start2":657,"length1":16,"length2":20},{"diffs":[[0,"ser());\n"],[-1,"\n"],[1,"    \n    "],[0,"// Use t"]],"start1":693,"start2":693,"length1":17,"length2":25},{"diffs":[[0," a POST\n"],[1,"    "],[0,"self.use"]],"start1":781,"start2":781,"length1":16,"length2":20},{"diffs":[[0,"ide());\n"],[-1,"\n"],[1,"    \n    "],[0,"// Parse"]],"start1":821,"start2":821,"length1":17,"length2":25},{"diffs":[[0,"cookies\n"],[1,"    "],[0,"self.use"]],"start1":851,"start2":851,"length1":16,"length2":20},{"diffs":[[0,"ser());\n"],[-1,"\n"],[1,"    \n    "],[0,"// Sessi"]],"start1":889,"start2":889,"length1":17,"length2":25},{"diffs":[[0,"nt var:\n"],[1,"    "],[0,"// self."]],"start1":964,"start2":964,"length1":16,"length2":20},{"diffs":[[0,"SECRET }));\n"],[1,"    "],[0,"self.use(exp"]],"start1":1037,"start2":1037,"length1":24,"length2":28},{"diffs":[[0,"!' }));\n"],[-1,"\n"],[1,"    \n    "],[0,"// Enabl"]],"start1":1108,"start2":1108,"length1":17,"length2":25},{"diffs":[[0," router\n"],[1,"    "],[0,"self.use"]],"start1":1138,"start2":1138,"length1":16,"length2":20},{"diffs":[[0,"outer);\n"],[-1,"\n"],[1,"    \n    "],[0,"// Serve"]],"start1":1165,"start2":1165,"length1":17,"length2":25},{"diffs":[[0,"rectory\n"],[1,"    "],[0,"self.use"]],"start1":1222,"start2":1222,"length1":16,"length2":20},{"diffs":[[0,"/public'));\n"],[-1,"});\n\n"],[1,"    });\n    \n    "],[0,"this.configu"]],"start1":1269,"start2":1269,"length1":29,"length2":41},{"diffs":[[0,", function () {\n"],[1,"    "],[0,"debug('setting u"]],"start1":1318,"start2":1318,"length1":32,"length2":36},{"diffs":[[0,"iguration...');\n"],[1,"    "],[0,"self.use(express"]],"start1":1366,"start2":1366,"length1":32,"length2":36},{"diffs":[[0,"iny'));\n"],[1,"    "],[0,"self.use"]],"start1":1412,"start2":1412,"length1":16,"length2":20},{"diffs":[[0,"));\n"],[-1,"});\n\n"],[1,"    });\n    \n    "],[0,"this"]],"start1":1495,"start2":1495,"length1":13,"length2":25},{"diffs":[[0,"on () {\n"],[1,"    "],[0,"debug('s"]],"start1":1551,"start2":1551,"length1":16,"length2":20},{"diffs":[[0,"n...');\n"],[1,"    "],[0,"self.use"]],"start1":1606,"start2":1606,"length1":16,"length2":20},{"diffs":[[0,"ler());\n"],[1,"    "],[0,"});\n}"]],"start1":1644,"start2":1644,"length1":13,"length2":17}]],"length":1661,"saved":false}
{"ts":1368606138579,"patch":[[{"diffs":[[0,"e(function () {\n"],[1,"    "],[0,"    debug('setti"]],"start1":400,"start2":400,"length1":32,"length2":36},{"diffs":[[0,"');\n    "],[-1,"\n"],[1,"    \n "],[0,"    "],[1,"   "],[0,"// Confi"]],"start1":465,"start2":465,"length1":21,"length2":29},{"diffs":[[0," engine\n    "],[1,"  "],[1,"  "],[0,"self.set('vi"]],"start1":515,"start2":515,"length1":24,"length2":28},{"diffs":[[0," '/views');\n    "],[1,"  "],[1,"  "],[0,"self.set('view e"]],"start1":558,"start2":558,"length1":32,"length2":36},{"diffs":[[0,"', 'jade');\n"],[1,"    "],[0,"    self.set"]],"start1":599,"start2":599,"length1":24,"length2":28},{"diffs":[[0,"alse});\n    "],[1,"   "],[-1,"\n"],[1," \n    "],[0,"    // Parse"]],"start1":654,"start2":654,"length1":25,"length2":33},{"diffs":[[0,"he body\n"],[1,"    "],[0,"    self"]],"start1":689,"start2":689,"length1":16,"length2":20},{"diffs":[[0,"ser());\n    "],[-1,"\n"],[1,"    \n    "],[0,"    // Use t"]],"start1":729,"start2":729,"length1":25,"length2":33},{"diffs":[[0," a POST\n"],[1,"    "],[0,"    self"]],"start1":825,"start2":825,"length1":16,"length2":20},{"diffs":[[0,"));\n    "],[-1,"\n"],[1,"    \n  "],[0,"    "],[1,"  "],[0,"// Parse"]],"start1":873,"start2":873,"length1":21,"length2":29},{"diffs":[[0,"cookies\n"],[1,"    "],[0,"    self"]],"start1":907,"start2":907,"length1":16,"length2":20},{"diffs":[[0,"ser());\n    "],[1,"   "],[-1,"\n"],[1," \n    "],[0,"    // Sessi"]],"start1":949,"start2":949,"length1":25,"length2":33},{"diffs":[[0,"nt var:\n"],[1,"    "],[0,"    // s"]],"start1":1032,"start2":1032,"length1":16,"length2":20},{"diffs":[[0,"SECRET }));\n"],[1,"    "],[0,"    self.use"]],"start1":1109,"start2":1109,"length1":24,"length2":28},{"diffs":[[0,"));\n    "],[-1,"\n"],[1,"    \n "],[0,"    "],[1,"   "],[0,"// Enabl"]],"start1":1188,"start2":1188,"length1":21,"length2":29},{"diffs":[[0," router\n    "],[1,"  "],[1,"  "],[0,"self.use(sel"]],"start1":1222,"start2":1222,"length1":24,"length2":28},{"diffs":[[0,"outer);\n    "],[1,"  "],[-1,"\n"],[1,"  \n    "],[0,"    // Serve"]],"start1":1253,"start2":1253,"length1":25,"length2":33},{"diffs":[[0,"rectory\n    "],[1,"   "],[1," "],[0,"self.use(exp"]],"start1":1318,"start2":1318,"length1":24,"length2":28},{"diffs":[[0,"lic'));\n    "],[-1,"});\n"],[1,"    });\n    "],[0,"    \n"],[1,"    "],[0,"    this.con"]],"start1":1373,"start2":1373,"length1":33,"length2":45},{"diffs":[[0,", function () {\n"],[1,"    "],[0,"    debug('setti"]],"start1":1430,"start2":1430,"length1":32,"length2":36},{"diffs":[[0,"ation...');\n    "],[1," "],[1,"   "],[0,"self.use(express"]],"start1":1486,"start2":1486,"length1":32,"length2":36},{"diffs":[[0,"r('tiny'));\n"],[1,"    "],[0,"    self.use"]],"start1":1528,"start2":1528,"length1":24,"length2":28},{"diffs":[[0,"    "],[1,"  "],[1,"  "],[0,"});\n    "],[1,"   "],[-1,"\n"],[1," \n   "],[0,"    "],[1," "],[0,"this"]],"start1":1623,"start2":1623,"length1":21,"length2":33},{"diffs":[[0,"nction () {\n"],[1,"    "],[0,"    debug('s"]],"start1":1683,"start2":1683,"length1":24,"length2":28},{"diffs":[[0,"ation...');\n"],[1,"    "],[0,"    self.use"]],"start1":1742,"start2":1742,"length1":24,"length2":28}]],"length":1805,"saved":false}
{"ts":1368606147975,"patch":[[{"diffs":[[0,"on () {\n        "],[1,"    "],[0,"debug('setting u"]],"start1":1438,"start2":1438,"length1":32,"length2":36},{"diffs":[[0,"n...');\n        "],[1,"    "],[0,"self.use(express"]],"start1":1494,"start2":1494,"length1":32,"length2":36},{"diffs":[[0,"r('tiny'));\n"],[1,"    "],[0,"        self"]],"start1":1536,"start2":1536,"length1":24,"length2":28}]],"length":1817,"saved":false}
{"ts":1368606151164,"patch":[[{"diffs":[[0,"on () {\n        "],[1,"    "],[0,"debug('setting u"]],"start1":1699,"start2":1699,"length1":32,"length2":36}]],"length":1821,"saved":false}
{"ts":1368606152165,"patch":[[{"diffs":[[0,"n...');\n        "],[1,"    "],[0,"self.use(express"]],"start1":1762,"start2":1762,"length1":32,"length2":36}]],"length":1825,"saved":false}
{"contributors":[],"silentsave":true,"ts":1368608853893,"patch":[[{"diffs":[[0,"nfig'),\n"],[1,"    "],[0,"path = r"]],"start1":32,"start2":32,"length1":16,"length2":20},{"diffs":[[0,"path'),\n"],[1,"    "],[0,"express "]],"start1":60,"start2":60,"length1":16,"length2":20},{"diffs":[[0," = this,"],[1,"\n   "],[0," rootDir"]],"start1":340,"start2":340,"length1":16,"length2":20},{"diffs":[[0," '..');\n"],[1,"    "],[0,"\n    thi"]],"start1":386,"start2":386,"length1":16,"length2":20},{"diffs":[[0,"/public'));\n"],[-1,"    "],[0,"    });\n    "]],"start1":1385,"start2":1385,"length1":28,"length2":24},{"diffs":[[0,"    });\n    "],[-1,"  "],[-1,"  \n   "],[1,"\n"],[0,"    "],[-1," "],[0,"this.configu"]],"start1":1397,"start2":1397,"length1":37,"length2":29},{"diffs":[[0,", function () {\n"],[-1,"    "],[0,"        debug('s"]],"start1":1434,"start2":1434,"length1":36,"length2":32},{"diffs":[[0,"n...');\n        "],[-1," "],[-1,"   "],[0,"self.use(express"]],"start1":1494,"start2":1494,"length1":36,"length2":32},{"diffs":[[0,"iny'));\n        "],[-1,"  "],[-1,"  "],[0,"self.use(express"]],"start1":1536,"start2":1536,"length1":36,"length2":32},{"diffs":[[0,": true }));\n"],[-1,"    "],[0,"    });\n    "]],"start1":1615,"start2":1615,"length1":28,"length2":24},{"diffs":[[0,"});\n    "],[-1," "],[-1,"   \n "],[1,"\n"],[0,"    "],[-1,"   "],[0,"this.con"]],"start1":1631,"start2":1631,"length1":29,"length2":21},{"diffs":[[0,"nction () {\n"],[-1,"    "],[0,"        debu"]],"start1":1675,"start2":1675,"length1":28,"length2":24},{"diffs":[[0,"ation...');\n"],[-1,"    "],[0,"        self"]],"start1":1734,"start2":1734,"length1":28,"length2":24},{"diffs":[[0,"   });\n}"],[-1,""],[0,""],[1,"\n"]],"start1":1789,"start2":1789,"length1":8,"length2":9}]],"length":1798,"saved":false}
{"ts":1368608867663,"patch":[[{"diffs":[[0,"   });\n}"],[1,";"],[0,"\n"]],"start1":1789,"start2":1789,"length1":9,"length2":10}]],"length":1799,"saved":false}
{"ts":1368608868731,"patch":[[{"diffs":[[0," });\n};\n"],[1,"\n"]],"start1":1791,"start2":1791,"length1":8,"length2":9}]],"length":1800,"saved":false}
{"ts":1369212042044,"patch":[[{"diffs":[[0,"xpress')"],[-1,";"],[1,",\n    passport = require('passport'),\n    LocalStrategy = require('passport-local').Strategy;\n\nvar users = [{ id: 1, username: 'slelann', password: 'satanas', email: 'slelann@gmail.com' }];\n\n\n// Use the LocalStrategy within Passport.\n// Strategies in passport require a `verify` function, which accept\n// credentials (in this case, a username and password), and invoke a callback\n// with a user object. In the real world, this would query a database;\n// however, in this example we are using a baked-in set of users.\npassport.use(new LocalStrategy(\n  function(username, password, done) {\n    // asynchronous verification, for effect...\n    process.nextTick(function () {\n      \n      // Find the user by username. If there is no user with the given\n      // username, or the password is not correct, set the user to `false` to\n      // indicate failure and set a flash message. Otherwise, return the\n      // authenticated `user`.\n      findByUsername(username, function(err, user) {\n        if (err) { return done(err); }\n        if (!user) { return done(null, false, { message: 'Unknown user ' + username }); }\n        if (user.password != password) { return done(null, false, { message: 'Invalid password' }); }\n        return done(null, user);\n      })\n    });\n  }\n));\n\nfunction findByUsername(username, fn) {\n  for (var i = 0, len = users.length; i < len; i++) {\n    var user = users[i];\n    if (user.username === username) {\n      return fn(null, user);\n    }\n  }\n  return fn(null, null);\n}"],[0,"\n\n// Exp"]],"start1":92,"start2":92,"length1":17,"length2":1512},{"diffs":[[0,"SECRET }));\n"],[-1,""],[0,"        self"]],"start1":2620,"start2":2620,"length1":24,"length2":24},{"diffs":[[0,"' }));\n        \n"],[1,"        //Passport\n        self.use(passport.initialize());\n        \n"],[0,"        // Enabl"]],"start1":2696,"start2":2696,"length1":32,"length2":101}]],"length":3364,"saved":false}
{"ts":1369212075556,"patch":[[{"diffs":[[0,"ss')"],[-1,",\n    passport = require('passport'),\n    LocalStrategy = require('passport-local').Strategy;\n\nvar users = [{ id: 1, username: 'slelann', password: 'satanas', email: 'slelann@gmail.com' }];\n\n\n// Use the LocalStrategy within Passport.\n// Strategies in passport require a `verify` function, which accept\n// credentials (in this case, a username and password), and invoke a callback\n// with a user object. In the real world, this would query a database;\n// however, in this example we are using a baked-in set of users.\npassport.use(new LocalStrategy(\n  function(username, password, done) {\n    // asynchronous verification, for effect...\n    process.nextTick(function () {\n      \n      // Find the user by username. If there is no user with the given\n      // username, or the password is not correct, set the user to `false` to\n      // indicate failure and set a flash message. Otherwise, return the\n      // authenticated `user`.\n      findByUsername(username, function(err, user) {\n        if (err) { return done(err); }\n        if (!user) { return done(null, false, { message: 'Unknown user ' + username }); }\n        if (user.password != password) { return done(null, false, { message: 'Invalid password' }); }\n        return done(null, user);\n      })\n    });\n  }\n));\n\nfunction findByUsername(username, fn) {\n  for (var i = 0, len = users.length; i < len; i++) {\n    var user = users[i];\n    if (user.username === username) {\n      return fn(null, user);\n    }\n  }\n  return fn(null, null);\n}"],[1,";"],[0,"\n\n//"]],"start1":96,"start2":96,"length1":1504,"length2":9},{"diffs":[[0,"SECRET }));\n"],[1,""],[0,"        self"]],"start1":1125,"start2":1125,"length1":24,"length2":24},{"diffs":[[0,"   \n"],[-1,"        //Passport\n        self.use(passport.initialize());\n        \n"],[0,"    "]],"start1":1213,"start2":1213,"length1":77,"length2":8}]],"length":1800,"saved":false}
{"ts":1369213956231,"patch":[[{"diffs":[[0,"xpress')"],[1,",\n    passport = require('passport')"],[0,";\n\n// Ex"]],"start1":92,"start2":92,"length1":16,"length2":52},{"diffs":[[0,"!' }));\n        "],[1,"self.use(passport.initialize());"],[0,"\n        // Enab"]],"start1":1236,"start2":1236,"length1":32,"length2":64}]],"length":1868,"saved":false}
{"ts":1369214077516,"patch":[[{"diffs":[[0,"ss')"],[-1,",\n    passport = require('passport')"],[0,";\n\n/"]],"start1":96,"start2":96,"length1":44,"length2":8},{"diffs":[[0,"    "],[-1,"self.use(passport.initialize());"],[0,"\n   "]],"start1":1212,"start2":1212,"length1":40,"length2":8}]],"length":1800,"saved":false}
{"ts":1369214160798,"patch":[[{"diffs":[[0,"xpress')"],[1,",\n    passport = require('passport'),\n    LocalStrategy = require('passport-local').Strategy;\n\nvar users = [{ id: 1, username: 'slelann', password: 'satanas', email: 'bob@example.com' }]"],[0,";\n\n// Ex"]],"start1":92,"start2":92,"length1":16,"length2":202},{"diffs":[[0,"!' }));\n        "],[1,"self.use(passport.initialize());"],[0,"\n        // Enab"]],"start1":1386,"start2":1386,"length1":32,"length2":64}]],"length":2018,"saved":false}
{"ts":1369214180352,"patch":[[{"diffs":[[0,"ss')"],[-1,",\n    passport = require('passport'),\n    LocalStrategy = require('passport-local').Strategy;\n\nvar users = [{ id: 1, username: 'slelann', password: 'satanas', email: 'bob@example.com' }]"],[0,";\n\n/"]],"start1":96,"start2":96,"length1":194,"length2":8},{"diffs":[[0,"    "],[-1,"self.use(passport.initialize());"],[0,"\n   "]],"start1":1212,"start2":1212,"length1":40,"length2":8}]],"length":1800,"saved":false}
{"ts":1369214221990,"patch":[[{"diffs":[[0,"xpress')"],[1,",\n    passport = require('passport'),\n    LocalStrategy = require('passport-local').Strategy;\n\nvar users = [{ id: 1, username: 'slelann', password: 'satanas', email: 'bob@example.com' }];\n\nfunction findByUsername(username, fn) {\n  for (var i = 0, len = users.length; i < len; i++) {\n    var user = users[i];\n    if (user.username === username) {\n      return fn(null, user);\n    }\n  }\n  return fn(null, null);\n}\n\n// Use the LocalStrategy within Passport.\n// Strategies in passport require a `verify` function, which accept\n// credentials (in this case, a username and password), and invoke a callback\n// with a user object. In the real world, this would query a database;\n// however, in this example we are using a baked-in set of users.\npassport.use(new LocalStrategy(\n  function(username, password, done) {\n    // asynchronous verification, for effect...\n    process.nextTick(function () {\n      \n      // Find the user by username. If there is no user with the given\n      // username, or the password is not correct, set the user to `false` to\n      // indicate failure and set a flash message. Otherwise, return the\n      // authenticated `user`.\n      findByUsername(username, function(err, user) {\n        if (err) { return done(err); }\n        if (!user) { return done(null, false, { message: 'Unknown user ' + username }); }\n        if (user.password != password) { return done(null, false, { message: 'Invalid password' }); }\n        return done(null, user);\n      })\n    });\n  }\n))"],[0,";\n\n// Ex"]],"start1":92,"start2":92,"length1":16,"length2":1508},{"diffs":[[0,"!' }));\n        "],[1,"self.use(passport.initialize());"],[0,"\n        // Enab"]],"start1":2692,"start2":2692,"length1":32,"length2":64}]],"length":3324,"saved":false}
{"ts":1369229542145,"patch":[[{"diffs":[[0,", fn) {\n"],[1,"\tdebug(\"findByUsername:\"+username)\n"],[0,"  for (v"]],"start1":321,"start2":321,"length1":16,"length2":51},{"diffs":[[0,"ll);\n}\n\n"],[1,"function findById(id, fn) {\n\tdebug(\"findById:\"+id)\n  var idx = id - 1;\n  if (users[idx]) {\n    fn(null, users[idx]);\n  } else {\n    fn(new Error('User ' + id + ' does not exist'));\n  }\n}\n\n// Passport session setup.\n// To support persistent login sessions, Passport needs to be able to\n// serialize users into and deserialize users out of the session. Typically,\n// this will be as simple as storing the user ID when serializing, and finding\n// the user by ID when deserializing.\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n  findById(id, function (err, user) {\n    done(err, user);\n  });\n});\n\n"],[0,"// Use t"]],"start1":540,"start2":540,"length1":16,"length2":685},{"diffs":[[0,"tialize());\n"],[1,"        self.use(passport.session());\n"],[0,"        // E"]],"start1":3433,"start2":3433,"length1":24,"length2":62}]],"length":4066,"saved":false}
{"ts":1369229554323,"patch":[[{"diffs":[[0,") {\n"],[-1,"\tdebug(\"findByUsername:\"+username)\n"],[0,"  fo"]],"start1":325,"start2":325,"length1":43,"length2":8},{"diffs":[[0,"\n}\n\n"],[-1,"function findById(id, fn) {\n\tdebug(\"findById:\"+id)\n  var idx = id - 1;\n  if (users[idx]) {\n    fn(null, users[idx]);\n  } else {\n    fn(new Error('User ' + id + ' does not exist'));\n  }\n}\n\n// Passport session setup.\n// To support persistent login sessions, Passport needs to be able to\n// serialize users into and deserialize users out of the session. Typically,\n// this will be as simple as storing the user ID when serializing, and finding\n// the user by ID when deserializing.\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n  findById(id, function (err, user) {\n    done(err, user);\n  });\n});\n\n"],[0,"// U"]],"start1":509,"start2":509,"length1":677,"length2":8},{"diffs":[[0,"));\n"],[-1,"        self.use(passport.session());\n"],[0,"    "]],"start1":2737,"start2":2737,"length1":46,"length2":8}]],"length":3324,"saved":false}
{"ts":1369229602327,"patch":[[{"diffs":[[0,", fn) {\n"],[1,"\tdebug(\"findByUsername:\"+username)\n"],[0,"  for (v"]],"start1":321,"start2":321,"length1":16,"length2":51},{"diffs":[[0,"ll);\n}\n\n"],[1,"function findById(id, fn) {\n\tdebug(\"findById:\"+id)\n  var idx = id - 1;\n  if (users[idx]) {\n    fn(null, users[idx]);\n  } else {\n    fn(new Error('User ' + id + ' does not exist'));\n  }\n}\n\n// Passport session setup.\n// To support persistent login sessions, Passport needs to be able to\n// serialize users into and deserialize users out of the session. Typically,\n// this will be as simple as storing the user ID when serializing, and finding\n// the user by ID when deserializing.\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n  findById(id, function (err, user) {\n    done(err, user);\n  });\n});\n\n"],[0,"// Use t"]],"start1":540,"start2":540,"length1":16,"length2":685},{"diffs":[[0,"on () {\n"],[-1,""],[0,"      "],[1,"debug(\"passport use...\")"],[0,"\n      /"]],"start1":1688,"start2":1688,"length1":22,"length2":46},{"diffs":[[0,"tialize());\n"],[1,"        self.use(passport.session());\n"],[0,"        // E"]],"start1":3457,"start2":3457,"length1":24,"length2":62}]],"length":4090,"saved":false}
{"contributors":[],"silentsave":true,"ts":1369229685251,"patch":[[{"diffs":[[0,") {\n"],[-1,"\tdebug(\"findByUsername:\"+username)\n"],[0,"  fo"]],"start1":325,"start2":325,"length1":43,"length2":8},{"diffs":[[0,"\n}\n\n"],[-1,"function findById(id, fn) {\n\tdebug(\"findById:\"+id)\n  var idx = id - 1;\n  if (users[idx]) {\n    fn(null, users[idx]);\n  } else {\n    fn(new Error('User ' + id + ' does not exist'));\n  }\n}\n\n// Passport session setup.\n// To support persistent login sessions, Passport needs to be able to\n// serialize users into and deserialize users out of the session. Typically,\n// this will be as simple as storing the user ID when serializing, and finding\n// the user by ID when deserializing.\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n  findById(id, function (err, user) {\n    done(err, user);\n  });\n});\n\n"],[0,"// U"]],"start1":509,"start2":509,"length1":677,"length2":8},{"diffs":[[0,") {\n"],[1,""],[0,"      "],[-1,"debug(\"passport use...\")"],[0,"\n   "]],"start1":988,"start2":988,"length1":38,"length2":14},{"diffs":[[0,"));\n"],[-1,"        self.use(passport.session());\n"],[0,"    "]],"start1":2737,"start2":2737,"length1":46,"length2":8}]],"length":3324,"saved":false}
