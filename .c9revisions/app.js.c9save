{"ts":1371654949838,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// -- Module dependencies.\nvar debug = require('debug')('app'),\n\texpress = require('express'),\n    http = require('http'),\n    db = require('./lib/db');\n\n// -- Create Express instance and export\nvar app = express();\n    \n// -- Apply Config\nrequire('./lib/config').apply(app);\n\n//Handler\nvar handler = require('./lib/handler/index')(db);\n\n// -- Routes\nrequire('./lib/router/index')(app, handler);\n\nhttp.createServer(app).listen(process.env.PORT, function(){\n\tdebug(\"Express server listening on port %d in %s mode\", process.env.PORT, process.env.NODE_ENV);\n});\n\n"]],"start1":0,"start2":0,"length1":0,"length2":560}]],"length":560}
{"contributors":[],"silentsave":true,"ts":1371655322283,"patch":[[{"diffs":[[0,"r app = "],[1,"module.exports ="],[0,"express("]],"start1":197,"start2":197,"length1":16,"length2":32}]],"length":576,"saved":false}
{"ts":1371655323279,"patch":[[{"diffs":[[0,"xports ="],[1," "],[0,"express("]],"start1":213,"start2":213,"length1":16,"length2":17}]],"length":577,"saved":false}
{"contributors":[],"silentsave":true,"ts":1377266589326,"patch":[[{"diffs":[[0,"E_ENV);\n"],[1,"\tde\n"],[0,"});\n\n"]],"start1":564,"start2":564,"length1":13,"length2":17}]],"length":581,"saved":false}
{"ts":1377266590811,"patch":[[{"diffs":[[0,"NV);\n\tde"],[1,"bug"],[0,"\n});\n\n"]],"start1":567,"start2":567,"length1":14,"length2":17}]],"length":584,"saved":false}
{"ts":1377266592056,"patch":[[{"diffs":[[0,";\n\tdebug"],[1,"()"],[0,"\n});\n\n"]],"start1":570,"start2":570,"length1":14,"length2":16}]],"length":586,"saved":false}
{"ts":1377266592969,"patch":[[{"diffs":[[0,"\n\tdebug("],[1,"var uristring = process.env.MONGOLAB_URI;"],[0,")\n});\n\n"]],"start1":571,"start2":571,"length1":15,"length2":56}]],"length":627,"saved":false}
{"ts":1377266596527,"patch":[[{"diffs":[[0,"AB_URI;)"],[1,";"],[0,"\n});\n\n"]],"start1":613,"start2":613,"length1":14,"length2":15}]],"length":628,"saved":false}
{"ts":1377266597661,"patch":[[{"diffs":[[0,"OLAB_URI"],[-1,";"],[0,");\n});\n\n"]],"start1":611,"start2":611,"length1":17,"length2":16}]],"length":627,"saved":false}
{"ts":1377266601078,"patch":[[{"diffs":[[0,"\n\tdebug("],[-1,"var "],[1,"\""],[0,"uristrin"]],"start1":571,"start2":571,"length1":20,"length2":17}]],"length":624,"saved":false}
{"ts":1377266602781,"patch":[[{"diffs":[[0,"string ="],[1,"\""],[0," process"]],"start1":583,"start2":583,"length1":16,"length2":17}]],"length":625,"saved":false}
{"ts":1377266603808,"patch":[[{"diffs":[[0,"tring =\""],[1,"+"],[0," process"]],"start1":584,"start2":584,"length1":16,"length2":17}]],"length":626,"saved":false}
{"ts":1377266604874,"patch":[[{"diffs":[[0,"string ="],[1," "],[0,"\"+ proce"]],"start1":583,"start2":583,"length1":16,"length2":17}]],"length":627,"saved":false}
{"ts":1377266718470,"patch":[[{"diffs":[[0,"ug(\""],[-1,"uristring"],[1,"env"],[0," = \""]],"start1":576,"start2":576,"length1":17,"length2":11}]],"length":621,"saved":false}
{"ts":1377266722179,"patch":[[{"diffs":[[0,".env"],[-1,".MONGOLAB_URI"],[0,");\n}"]],"start1":596,"start2":596,"length1":21,"length2":8}]],"length":608,"saved":false}
{"ts":1377266742770,"patch":[[{"diffs":[[0,"nv = \"+ "],[1,"ut"],[0,"process."]],"start1":581,"start2":581,"length1":16,"length2":18}]],"length":610,"saved":false}
{"ts":1377266744615,"patch":[[{"diffs":[[0," = \"+ ut"],[1,"il."],[0,"process."]],"start1":583,"start2":583,"length1":16,"length2":19}]],"length":613,"saved":false}
{"ts":1377266746044,"patch":[[{"diffs":[[0,"\"+ util."],[1,"in"],[0,"process."]],"start1":586,"start2":586,"length1":16,"length2":18}]],"length":615,"saved":false}
{"ts":1377266747337,"patch":[[{"diffs":[[0," util.in"],[1,"s"],[0,"process."]],"start1":588,"start2":588,"length1":16,"length2":17}]],"length":616,"saved":false}
{"ts":1377266749449,"patch":[[{"diffs":[[0,"til.insp"],[1,"ectp"],[0,"rocess.e"]],"start1":590,"start2":590,"length1":16,"length2":20}]],"length":620,"saved":false}
{"ts":1377266750459,"patch":[[{"diffs":[[0,".inspect"],[1,"("],[0,"process."]],"start1":593,"start2":593,"length1":16,"length2":17}]],"length":621,"saved":false}
{"ts":1377266753644,"patch":[[{"diffs":[[0,"ess.env)"],[1,")"],[0,";\n});\n\n"]],"start1":606,"start2":606,"length1":15,"length2":16}]],"length":622,"saved":false}
{"ts":1377266759215,"patch":[[{"diffs":[[0,"'http'),"],[1," util "],[0,"\n    db "]],"start1":114,"start2":114,"length1":16,"length2":22}]],"length":628,"saved":false}
{"ts":1377266760553,"patch":[[{"diffs":[[0,"), util "],[1,"= re"],[0,"\n    db "]],"start1":120,"start2":120,"length1":16,"length2":20}]],"length":632,"saved":false}
{"ts":1377266761938,"patch":[[{"diffs":[[0,"til = re"],[1,"qui"],[0,"\n    db "]],"start1":124,"start2":124,"length1":16,"length2":19}]],"length":635,"saved":false}
{"ts":1377266763855,"patch":[[{"diffs":[[0," = requi"],[1,"re(\"util\")"],[0,"\n    db "]],"start1":127,"start2":127,"length1":16,"length2":26}]],"length":645,"saved":false}
{"contributors":[],"silentsave":true,"ts":1380275003610,"patch":[[{"diffs":[[0,"'http'),"],[-1," util"],[1,"\n\tmongoose"],[0," = requi"]],"start1":114,"start2":114,"length1":21,"length2":26},{"diffs":[[0,"ire("],[-1,"\"util\")\n    db = require('./lib/db')"],[1,"'mongoose'),\n\tmongolabdb"],[0,";\n\n/"]],"start1":139,"start2":139,"length1":44,"length2":32},{"diffs":[[0,"ress();\n"],[-1,"    "],[0,""],[1,""],[0,"\n// -- A"]],"start1":241,"start2":241,"length1":20,"length2":16},{"diffs":[[0,");\n\n"],[-1,"//Handler\nvar handler = require('./lib/handler/index')(db);\n\n"],[1,"var debug = require('debug')('db');\nvar mongoose = require('mongoose');\nvar Schema = require('mongoose').Schema;\nvar mongolabdb;\nvar WineSchema, Wine;\nvar util = require(\"util\");\n\nvar uristring = process.env.MONGOLAB_URI || 'mongodb://slelann:satanas@ds041218.mongolab.com:41218/heroku_app15653280';\n// Bootstrap db connection\nmongoose.connect(uristring);\nmongolabdb = mongoose.connection;\n//Events management\nmongolabdb.on('error', function (err) {\n\tdebug('connection error:' + err);\n});\nmongolabdb.on('close', function () {\n\tdebug('connection closed');\n});\nmongolabdb.once('open', function (callback) {\n\tdebug('Connected to mongolab db...');\n\tinitSchema();\n\t//mongolabdb.close();\n});\n\n\n/**\n * Init Wine Schema\n */\n\nfunction initSchema() {\n\n\tWineSchema = new Schema({\n\t\tiWine: {type : String, default : '', trim : true},\n\t\tquantity: {type : Number, default : 0, trim : true},\n\t\tlocation: {type : String, default : '', trim : true},\n\t\tbin: {type : String, default : '', trim : true},\n\t\tsize: {type : String, default : '', trim : true},\n\t\tprice: {type : Number, default : 0, trim : true},\n\t\tvintage: {type : String, default : '', trim : true},\n\t\twine: {type : String, default : '', trim : true},\n\t\tlocale: {type : String, default : '', trim : true},\n\t\tcountry: {type : String, default : '', trim : true},\n\t\tregion: {type : String, default : '', trim : true},\n\t\tsubRegion: {type : String, default : '', trim : true},\n\t\tappellation: {type : String, default : '', trim : true},\n\t\tproducer: {type : String, default : '', trim : true},\n\t\tsortProducer: {type : String, default : '', trim : true},\n\t\ttype: {type : String, default : '', trim : true},\n\t\tvarietal: {type : String, default : '', trim : true},\n\t\tmasterVarietal: {type : String, default : '', trim : true},\n\t\tdesignation: {type : String, default : '', trim : true},\n\t\tvineyard: {type : String, default : '', trim : true},\n\t\tctNote: {type : Number, default : 0, trim : true},\n\t\tbeginConsume: {type : String, trim : true},\n\t\tendConsume: {type : String, trim : true},\n\t\tcreatedAt  : {type : Date, default : Date.now}\n\t\t});\n\n\tWine = mongoose.model('Wine', WineSchema);\n}\n\nfunction saveWine(ctwine) {\n\tconsole.log('saveWine');\n\tvar Wine = mongoose.model('Wine');\n\tvar options = { upsert: true };\n\tvar update = {  iWine: ctwine.iWine,\n\t\t\t\t\tquantity: ctwine.Quantity,\n\t\t\t\t\tlocation: ctwine.Location,\n\t\t\t\t\tbin: ctwine.Bin,\n\t\t\t\t\tsize: ctwine.Size,\n\t\t\t\t\tprice: ctwine.Price,\n\t\t\t\t\tvintage: ctwine.Vintage,\n\t\t\t\t\twine: ctwine.Wine,\n\t\t\t\t\tlocale: ctwine.Locale,\n\t\t\t\t\tcountry: ctwine.Country,\n\t\t\t\t\tregion: ctwine.Region,\n\t\t\t\t\tsubRegion: ctwine.SubRegion,\n\t\t\t\t\tappellation: ctwine.Appellation,\n\t\t\t\t\tproducer: ctwine.Producer,\n\t\t\t\t\ttype: ctwine.Type,\n\t\t\t\t\tvarietal: ctwine.Varietal,\n\t\t\t\t\tmasterVarietal: ctwine.MasterVarietal,\n\t\t\t\t\tdesignation: ctwine.Designation,\n\t\t\t\t\tvineyard: ctwine.Vineyard,\n\t\t\t\t\tbeginConsume: ctwine.BeginConsume,\n\t\t\t\t\tendConsume: ctwine.EndConsume,\n\t\t\t\t\tctNote: ctwine.CT\n\t\t\t\t\t};\n\n\tWine.findOneAndUpdate({ iWine: ctwine.iWine }, update, options, function (err, wine) {\n\t\twine.save(function (err) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('error:'+err);\n\t\t\t\tconsole.log(util.inspect(ctwine));\n\t\t\t}\n\t\t});\n\t});\n\n}\n\nfunction getWinesByCountry() {\n    debug(\"--getWinesByCountry\")\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n    // Wine.find(\n    //         {},\n    //         function(err, docs) {\n    //         if (!err){\n    //           console.log(docs);\n    //           process.exit();\n    //                   }\n    //         else { throw err;}\n\n    //         }\n    // );\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$country',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n            debug(\"countries:\"+results);\n\t\t\treturn results;\n        }\n    });\n    return undefined;\n}\n\nfunction getWinesByType(cb) {\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$type',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n\t\t\treturn results;\n        }\n    });\n\treturn undefined;\n}\n\nfunction getWinesByVintage() {\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$vintage',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n\t\t\treturn results;\n        }\n    });\n\n\treturn undefined;\n\n}\n\nmodule.exports.saveWine = saveWine;\nmodule.exports.getWinesByCountry = getWinesByCountry;\nmodule.exports.getWinesByType = getWinesByType;\nmodule.exports.getWinesByVintage = getWinesByVintage;\n\n// Bootstrap db connection\nvar uristring = process.env.MONGOLAB_URI || 'mongodb://slelann:satanas@ds041218.mongolab.com:41218/heroku_app15653280';\n// Bootstrap db connection\nmongoose.connect(uristring);\nmongolabdb = mongoose.connection;\n//Events management\nmongolabdb.on('error', function (err) {\n\tdebug('connection error:' + err);\n});\nmongolabdb.on('close', function () {\n\tdebug('connection closed');\n});\nmongolabdb.once('open', function (callback) {\n\tdebug('Connected to mongolab db...');\n\n\trequire('./lib/model/wines');\n\n\t//DB\n\tvar db = require('./lib/db')(mongoose);\n\t//Handler\n\tvar handler = require('./lib/handler/index')(db);\n\t"],[0,"// -"]],"start1":302,"start2":302,"length1":69,"length2":5443},{"diffs":[[0," Routes\n"],[1,"\t"],[0,"require("]],"start1":5746,"start2":5746,"length1":16,"length2":17},{"diffs":[[0,"dler);\n\n"],[1,"});\n\n\n\n"],[0,"http.cre"]],"start1":5793,"start2":5793,"length1":16,"length2":23},{"diffs":[[0,"_ENV);\n\t"],[1,"//"],[0,"debug(\"e"]],"start1":5959,"start2":5959,"length1":16,"length2":18},{"diffs":[[0,"ess.env));\n});\n\n"],[1,"\n"]],"start1":6002,"start2":6002,"length1":16,"length2":17}]],"length":6019,"saved":false}
{"ts":1380275006664,"patch":[[{"diffs":[[0,");\n\n"],[-1,"var debug = require('debug')('db');\nvar mongoose = require('mongoose');\nvar Schema = require('mongoose').Schema;\nvar mongolabdb;\nvar WineSchema, Wine;\nvar util = require(\"util\");\n\nvar uristring = process.env.MONGOLAB_URI || 'mongodb://slelann:satanas@ds041218.mongolab.com:41218/heroku_app15653280';\n// Bootstrap db connection\nmongoose.connect(uristring);\nmongolabdb = mongoose.connection;\n//Events management\nmongolabdb.on('error', function (err) {\n\tdebug('connection error:' + err);\n});\nmongolabdb.on('close', function () {\n\tdebug('connection closed');\n});\nmongolabdb.once('open', function (callback) {\n\tdebug('Connected to mongolab db...');\n\tinitSchema();\n\t//mongolabdb.close();\n});\n\n\n/**\n * Init Wine Schema\n */\n\nfunction initSchema() {\n\n\tWineSchema = new Schema({\n\t\tiWine: {type : String, default : '', trim : true},\n\t\tquantity: {type : Number, default : 0, trim : true},\n\t\tlocation: {type : String, default : '', trim : true},\n\t\tbin: {type : String, default : '', trim : true},\n\t\tsize: {type : String, default : '', trim : true},\n\t\tprice: {type : Number, default : 0, trim : true},\n\t\tvintage: {type : String, default : '', trim : true},\n\t\twine: {type : String, default : '', trim : true},\n\t\tlocale: {type : String, default : '', trim : true},\n\t\tcountry: {type : String, default : '', trim : true},\n\t\tregion: {type : String, default : '', trim : true},\n\t\tsubRegion: {type : String, default : '', trim : true},\n\t\tappellation: {type : String, default : '', trim : true},\n\t\tproducer: {type : String, default : '', trim : true},\n\t\tsortProducer: {type : String, default : '', trim : true},\n\t\ttype: {type : String, default : '', trim : true},\n\t\tvarietal: {type : String, default : '', trim : true},\n\t\tmasterVarietal: {type : String, default : '', trim : true},\n\t\tdesignation: {type : String, default : '', trim : true},\n\t\tvineyard: {type : String, default : '', trim : true},\n\t\tctNote: {type : Number, default : 0, trim : true},\n\t\tbeginConsume: {type : String, trim : true},\n\t\tendConsume: {type : String, trim : true},\n\t\tcreatedAt  : {type : Date, default : Date.now}\n\t\t});\n\n\tWine = mongoose.model('Wine', WineSchema);\n}\n\nfunction saveWine(ctwine) {\n\tconsole.log('saveWine');\n\tvar Wine = mongoose.model('Wine');\n\tvar options = { upsert: true };\n\tvar update = {  iWine: ctwine.iWine,\n\t\t\t\t\tquantity: ctwine.Quantity,\n\t\t\t\t\tlocation: ctwine.Location,\n\t\t\t\t\tbin: ctwine.Bin,\n\t\t\t\t\tsize: ctwine.Size,\n\t\t\t\t\tprice: ctwine.Price,\n\t\t\t\t\tvintage: ctwine.Vintage,\n\t\t\t\t\twine: ctwine.Wine,\n\t\t\t\t\tlocale: ctwine.Locale,\n\t\t\t\t\tcountry: ctwine.Country,\n\t\t\t\t\tregion: ctwine.Region,\n\t\t\t\t\tsubRegion: ctwine.SubRegion,\n\t\t\t\t\tappellation: ctwine.Appellation,\n\t\t\t\t\tproducer: ctwine.Producer,\n\t\t\t\t\ttype: ctwine.Type,\n\t\t\t\t\tvarietal: ctwine.Varietal,\n\t\t\t\t\tmasterVarietal: ctwine.MasterVarietal,\n\t\t\t\t\tdesignation: ctwine.Designation,\n\t\t\t\t\tvineyard: ctwine.Vineyard,\n\t\t\t\t\tbeginConsume: ctwine.BeginConsume,\n\t\t\t\t\tendConsume: ctwine.EndConsume,\n\t\t\t\t\tctNote: ctwine.CT\n\t\t\t\t\t};\n\n\tWine.findOneAndUpdate({ iWine: ctwine.iWine }, update, options, function (err, wine) {\n\t\twine.save(function (err) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('error:'+err);\n\t\t\t\tconsole.log(util.inspect(ctwine));\n\t\t\t}\n\t\t});\n\t});\n\n}\n\nfunction getWinesByCountry() {\n    debug(\"--getWinesByCountry\")\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n    // Wine.find(\n    //         {},\n    //         function(err, docs) {\n    //         if (!err){\n    //           console.log(docs);\n    //           process.exit();\n    //                   }\n    //         else { throw err;}\n\n    //         }\n    // );\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$country',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n            debug(\"countries:\"+results);\n\t\t\treturn results;\n        }\n    });\n    return undefined;\n}\n\nfunction getWinesByType(cb) {\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$type',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n\t\t\treturn results;\n        }\n    });\n\treturn undefined;\n}\n\nfunction getWinesByVintage() {\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$vintage',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n\t\t\treturn results;\n        }\n    });\n\n\treturn undefined;\n\n}\n\nmodule.exports.saveWine = saveWine;\nmodule.exports.getWinesByCountry = getWinesByCountry;\nmodule.exports.getWinesByType = getWinesByType;\nmodule.exports.getWinesByVintage = getWinesByVintage;\n"],[0,"\n// "]],"start1":302,"start2":302,"length1":4808,"length2":8}]],"length":1219,"saved":false}
{"ts":1380275008667,"patch":[[{"diffs":[[0,"y(app);\n"],[1,"var debug = require('debug')('db');\nvar mongoose = require('mongoose');\nvar Schema = require('mongoose').Schema;\nvar mongolabdb;\nvar WineSchema, Wine;\nvar util = require(\"util\");\n\nvar uristring = process.env.MONGOLAB_URI || 'mongodb://slelann:satanas@ds041218.mongolab.com:41218/heroku_app15653280';\n// Bootstrap db connection\nmongoose.connect(uristring);\nmongolabdb = mongoose.connection;\n//Events management\nmongolabdb.on('error', function (err) {\n\tdebug('connection error:' + err);\n});\nmongolabdb.on('close', function () {\n\tdebug('connection closed');\n});\nmongolabdb.once('open', function (callback) {\n\tdebug('Connected to mongolab db...');\n\tinitSchema();\n\t//mongolabdb.close();\n});\n\n\n/**\n * Init Wine Schema\n */\n\nfunction initSchema() {\n\n\tWineSchema = new Schema({\n\t\tiWine: {type : String, default : '', trim : true},\n\t\tquantity: {type : Number, default : 0, trim : true},\n\t\tlocation: {type : String, default : '', trim : true},\n\t\tbin: {type : String, default : '', trim : true},\n\t\tsize: {type : String, default : '', trim : true},\n\t\tprice: {type : Number, default : 0, trim : true},\n\t\tvintage: {type : String, default : '', trim : true},\n\t\twine: {type : String, default : '', trim : true},\n\t\tlocale: {type : String, default : '', trim : true},\n\t\tcountry: {type : String, default : '', trim : true},\n\t\tregion: {type : String, default : '', trim : true},\n\t\tsubRegion: {type : String, default : '', trim : true},\n\t\tappellation: {type : String, default : '', trim : true},\n\t\tproducer: {type : String, default : '', trim : true},\n\t\tsortProducer: {type : String, default : '', trim : true},\n\t\ttype: {type : String, default : '', trim : true},\n\t\tvarietal: {type : String, default : '', trim : true},\n\t\tmasterVarietal: {type : String, default : '', trim : true},\n\t\tdesignation: {type : String, default : '', trim : true},\n\t\tvineyard: {type : String, default : '', trim : true},\n\t\tctNote: {type : Number, default : 0, trim : true},\n\t\tbeginConsume: {type : String, trim : true},\n\t\tendConsume: {type : String, trim : true},\n\t\tcreatedAt  : {type : Date, default : Date.now}\n\t\t});\n\n\tWine = mongoose.model('Wine', WineSchema);\n}\n\nfunction saveWine(ctwine) {\n\tconsole.log('saveWine');\n\tvar Wine = mongoose.model('Wine');\n\tvar options = { upsert: true };\n\tvar update = {  iWine: ctwine.iWine,\n\t\t\t\t\tquantity: ctwine.Quantity,\n\t\t\t\t\tlocation: ctwine.Location,\n\t\t\t\t\tbin: ctwine.Bin,\n\t\t\t\t\tsize: ctwine.Size,\n\t\t\t\t\tprice: ctwine.Price,\n\t\t\t\t\tvintage: ctwine.Vintage,\n\t\t\t\t\twine: ctwine.Wine,\n\t\t\t\t\tlocale: ctwine.Locale,\n\t\t\t\t\tcountry: ctwine.Country,\n\t\t\t\t\tregion: ctwine.Region,\n\t\t\t\t\tsubRegion: ctwine.SubRegion,\n\t\t\t\t\tappellation: ctwine.Appellation,\n\t\t\t\t\tproducer: ctwine.Producer,\n\t\t\t\t\ttype: ctwine.Type,\n\t\t\t\t\tvarietal: ctwine.Varietal,\n\t\t\t\t\tmasterVarietal: ctwine.MasterVarietal,\n\t\t\t\t\tdesignation: ctwine.Designation,\n\t\t\t\t\tvineyard: ctwine.Vineyard,\n\t\t\t\t\tbeginConsume: ctwine.BeginConsume,\n\t\t\t\t\tendConsume: ctwine.EndConsume,\n\t\t\t\t\tctNote: ctwine.CT\n\t\t\t\t\t};\n\n\tWine.findOneAndUpdate({ iWine: ctwine.iWine }, update, options, function (err, wine) {\n\t\twine.save(function (err) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('error:'+err);\n\t\t\t\tconsole.log(util.inspect(ctwine));\n\t\t\t}\n\t\t});\n\t});\n\n}\n\nfunction getWinesByCountry() {\n    debug(\"--getWinesByCountry\")\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n    // Wine.find(\n    //         {},\n    //         function(err, docs) {\n    //         if (!err){\n    //           console.log(docs);\n    //           process.exit();\n    //                   }\n    //         else { throw err;}\n\n    //         }\n    // );\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$country',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n            debug(\"countries:\"+results);\n\t\t\treturn results;\n        }\n    });\n    return undefined;\n}\n\nfunction getWinesByType(cb) {\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$type',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n\t\t\treturn results;\n        }\n    });\n\treturn undefined;\n}\n\nfunction getWinesByVintage() {\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$vintage',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n\t\t\treturn results;\n        }\n    });\n\n\treturn undefined;\n\n}\n\nmodule.exports.saveWine = saveWine;\nmodule.exports.getWinesByCountry = getWinesByCountry;\nmodule.exports.getWinesByType = getWinesByType;\nmodule.exports.getWinesByVintage = getWinesByVintage;\n"],[0,"\n\n// Boo"]],"start1":297,"start2":297,"length1":16,"length2":4816}]],"length":6019,"saved":false}
{"ts":1380275012261,"patch":[[{"diffs":[[0,"p);\n"],[-1,"var debug = require('debug')('db');\nvar mongoose = require('mongoose');\nvar Schema = require('mongoose').Schema;\nvar mongolabdb;\nvar WineSchema, Wine;\nvar util = require(\"util\");\n\nvar uristring = process.env.MONGOLAB_URI || 'mongodb://slelann:satanas@ds041218.mongolab.com:41218/heroku_app15653280';\n// Bootstrap db connection\nmongoose.connect(uristring);\nmongolabdb = mongoose.connection;\n//Events management\nmongolabdb.on('error', function (err) {\n\tdebug('connection error:' + err);\n});\nmongolabdb.on('close', function () {\n\tdebug('connection closed');\n});\nmongolabdb.once('open', function (callback) {\n\tdebug('Connected to mongolab db...');\n\tinitSchema();\n\t//mongolabdb.close();\n});\n\n\n/**\n * Init Wine Schema\n */\n\nfunction initSchema() {\n\n\tWineSchema = new Schema({\n\t\tiWine: {type : String, default : '', trim : true},\n\t\tquantity: {type : Number, default : 0, trim : true},\n\t\tlocation: {type : String, default : '', trim : true},\n\t\tbin: {type : String, default : '', trim : true},\n\t\tsize: {type : String, default : '', trim : true},\n\t\tprice: {type : Number, default : 0, trim : true},\n\t\tvintage: {type : String, default : '', trim : true},\n\t\twine: {type : String, default : '', trim : true},\n\t\tlocale: {type : String, default : '', trim : true},\n\t\tcountry: {type : String, default : '', trim : true},\n\t\tregion: {type : String, default : '', trim : true},\n\t\tsubRegion: {type : String, default : '', trim : true},\n\t\tappellation: {type : String, default : '', trim : true},\n\t\tproducer: {type : String, default : '', trim : true},\n\t\tsortProducer: {type : String, default : '', trim : true},\n\t\ttype: {type : String, default : '', trim : true},\n\t\tvarietal: {type : String, default : '', trim : true},\n\t\tmasterVarietal: {type : String, default : '', trim : true},\n\t\tdesignation: {type : String, default : '', trim : true},\n\t\tvineyard: {type : String, default : '', trim : true},\n\t\tctNote: {type : Number, default : 0, trim : true},\n\t\tbeginConsume: {type : String, trim : true},\n\t\tendConsume: {type : String, trim : true},\n\t\tcreatedAt  : {type : Date, default : Date.now}\n\t\t});\n\n\tWine = mongoose.model('Wine', WineSchema);\n}\n\nfunction saveWine(ctwine) {\n\tconsole.log('saveWine');\n\tvar Wine = mongoose.model('Wine');\n\tvar options = { upsert: true };\n\tvar update = {  iWine: ctwine.iWine,\n\t\t\t\t\tquantity: ctwine.Quantity,\n\t\t\t\t\tlocation: ctwine.Location,\n\t\t\t\t\tbin: ctwine.Bin,\n\t\t\t\t\tsize: ctwine.Size,\n\t\t\t\t\tprice: ctwine.Price,\n\t\t\t\t\tvintage: ctwine.Vintage,\n\t\t\t\t\twine: ctwine.Wine,\n\t\t\t\t\tlocale: ctwine.Locale,\n\t\t\t\t\tcountry: ctwine.Country,\n\t\t\t\t\tregion: ctwine.Region,\n\t\t\t\t\tsubRegion: ctwine.SubRegion,\n\t\t\t\t\tappellation: ctwine.Appellation,\n\t\t\t\t\tproducer: ctwine.Producer,\n\t\t\t\t\ttype: ctwine.Type,\n\t\t\t\t\tvarietal: ctwine.Varietal,\n\t\t\t\t\tmasterVarietal: ctwine.MasterVarietal,\n\t\t\t\t\tdesignation: ctwine.Designation,\n\t\t\t\t\tvineyard: ctwine.Vineyard,\n\t\t\t\t\tbeginConsume: ctwine.BeginConsume,\n\t\t\t\t\tendConsume: ctwine.EndConsume,\n\t\t\t\t\tctNote: ctwine.CT\n\t\t\t\t\t};\n\n\tWine.findOneAndUpdate({ iWine: ctwine.iWine }, update, options, function (err, wine) {\n\t\twine.save(function (err) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('error:'+err);\n\t\t\t\tconsole.log(util.inspect(ctwine));\n\t\t\t}\n\t\t});\n\t});\n\n}\n\nfunction getWinesByCountry() {\n    debug(\"--getWinesByCountry\")\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n    // Wine.find(\n    //         {},\n    //         function(err, docs) {\n    //         if (!err){\n    //           console.log(docs);\n    //           process.exit();\n    //                   }\n    //         else { throw err;}\n\n    //         }\n    // );\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$country',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n            debug(\"countries:\"+results);\n\t\t\treturn results;\n        }\n    });\n    return undefined;\n}\n\nfunction getWinesByType(cb) {\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$type',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n\t\t\treturn results;\n        }\n    });\n\treturn undefined;\n}\n\nfunction getWinesByVintage() {\n\t//initSchema();\n\t//Wine = mongoose.model('Wine');\n\tvar stats;\n\n\tWine.aggregate([\n        { $group: {\n            _id: '$vintage',\n            sum: { $sum: '$quantity'}\n        }}\n    ], function (err, results) {\n        if (err) {\n            console.error(err);\n        } else {\n\t\t\treturn results;\n        }\n    });\n\n\treturn undefined;\n\n}\n\nmodule.exports.saveWine = saveWine;\nmodule.exports.getWinesByCountry = getWinesByCountry;\nmodule.exports.getWinesByType = getWinesByType;\nmodule.exports.getWinesByVintage = getWinesByVintage;\n"],[0,"\n\n//"]],"start1":301,"start2":301,"length1":4808,"length2":8}]],"length":1219,"saved":false}
{"ts":1380275018954,"patch":[[{"diffs":[[0,"(app);\n\n"],[1,"\t//DB\n\tvar db = require('./lib/db')(mongoose);\n\t//Handler\n\tvar handler = require('./lib/handler/index')(db);\n"],[0,"\n// Boot"]],"start1":298,"start2":298,"length1":16,"length2":125}]],"length":1328,"saved":false}
{"ts":1380275021482,"patch":[[{"diffs":[[0,"pply(app);\n\n"],[-1,"\t"],[0,"//DB\n"],[-1,"\t"],[0,"var db = req"]],"start1":294,"start2":294,"length1":31,"length2":29},{"diffs":[[0,"db')(mongoose);\n"],[-1,"\t"],[0,"//Handler\n\tvar h"]],"start1":335,"start2":335,"length1":33,"length2":32},{"diffs":[[0,"ose);\n//Handler\n"],[-1,"\t"],[0,"var handler = re"]],"start1":345,"start2":345,"length1":33,"length2":32}]],"length":1324,"saved":false}
{"ts":1380275022926,"patch":[[{"diffs":[[0,"(app);\n\n"],[-1,"//DB\n"],[0,"var db ="]],"start1":298,"start2":298,"length1":21,"length2":16}]],"length":1319,"saved":false}
{"ts":1380275027612,"patch":[[{"diffs":[[0,"r db"],[-1," = require('./lib/db')(mongoose);\n//Handler\nvar"],[1,","],[0," han"]],"start1":308,"start2":308,"length1":55,"length2":9}]],"length":1273,"saved":false}
{"ts":1380275031991,"patch":[[{"diffs":[[0,"dler"],[-1," = require('./lib/handler/index')(db)"],[0,";\n\n/"]],"start1":317,"start2":317,"length1":45,"length2":8}]],"length":1236,"saved":false}
{"ts":1380275038519,"patch":[[{"diffs":[[0,"\n\t//DB\n\t"],[-1,"var "],[0,"db = req"]],"start1":847,"start2":847,"length1":20,"length2":16}]],"length":1232,"saved":false}
{"ts":1380275040639,"patch":[[{"diffs":[[0,"andler\n\t"],[-1,"var "],[0,"handler "]],"start1":895,"start2":895,"length1":20,"length2":16}]],"length":1228,"saved":false}
{"ts":1380275160526,"patch":[[{"diffs":[[0,"b...');\n"],[1,"mongolabdb"],[0,"\n\trequir"]],"start1":807,"start2":807,"length1":16,"length2":26}]],"length":1238,"saved":false}
{"ts":1380275162569,"patch":[[{"diffs":[[0,"ngolabdb"],[1,".close"],[0,"\n\trequir"]],"start1":817,"start2":817,"length1":16,"length2":22}]],"length":1244,"saved":false}
{"ts":1380275165765,"patch":[[{"diffs":[[0,"db.close"],[1,"()"],[0,"\n\trequir"]],"start1":823,"start2":823,"length1":16,"length2":18}]],"length":1246,"saved":false}
{"ts":1380275167177,"patch":[[{"diffs":[[0,".close()"],[1,";"],[0,"\n\trequir"]],"start1":825,"start2":825,"length1":16,"length2":17}]],"length":1247,"saved":false}
{"ts":1380275183097,"patch":[[{"diffs":[[0,"');\n"],[-1,"mongolabdb.close();"],[0,"\n\tre"]],"start1":811,"start2":811,"length1":27,"length2":8}]],"length":1228,"saved":false}
