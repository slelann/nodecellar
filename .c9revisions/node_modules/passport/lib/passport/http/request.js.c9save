{"ts":1371563010101,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Module dependencies.\n */\nvar http = require('http')\n  , req = http.IncomingMessage.prototype;\n\n\n/**\n * Intiate a login session for `user`.\n *\n * Options:\n *   - `session`  Save login state in session, defaults to _true_\n *\n * Examples:\n *\n *     req.logIn(user, { session: false });\n *\n *     req.logIn(user, function(err) {\n *       if (err) { throw err; }\n *       // session saved\n *     });\n *\n * @param {User} user\n * @param {Object} options\n * @param {Function} done\n * @api public\n */\nreq.login =\nreq.logIn = function(user, options, done) {\n  if (!this._passport) throw new Error('passport.initialize() middleware not in use');\n  \n  if (!done && typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n  options = options || {};\n  var property = this._passport.instance._userProperty || 'user';\n  var session = (options.session === undefined) ? true : options.session;\n  \n  this[property] = user;\n  if (session) {\n    var self = this;\n    this._passport.instance.serializeUser(user, function(err, obj) {\n      if (err) { self[property] = null; return done(err); }\n      self._passport.session.user = obj;\n      done();\n    });\n  } else {\n    done && done();\n  }\n}\n\n/**\n * Terminate an existing login session.\n *\n * @api public\n */\nreq.logout =\nreq.logOut = function() {\n  if (!this._passport) throw new Error('passport.initialize() middleware not in use');\n  \n  var property = this._passport.instance._userProperty || 'user';\n  \n  this[property] = null;\n  delete this._passport.session.user;\n};\n\n/**\n * Test if request is authenticated.\n *\n * @return {Boolean}\n * @api public\n */\nreq.isAuthenticated = function() {\n  var property = 'user';\n  if (this._passport && this._passport.instance._userProperty) {\n    property = this._passport.instance._userProperty;\n  }\n  \n  return (this[property]) ? true : false;\n};\n\n/**\n * Test if request is unauthenticated.\n *\n * @return {Boolean}\n * @api public\n */\nreq.isUnauthenticated = function() {\n  return !this.isAuthenticated();\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":2005}]],"length":2005}
