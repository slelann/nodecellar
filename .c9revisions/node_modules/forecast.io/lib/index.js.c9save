{"ts":1368534576305,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var log = require('debug')('forecast.io'),\n    request = require('request'),\n    util = require('util'),\n    _ = require('lodash');\n\nfunction ForecastError (errors) {\n  Error.captureStackTrace(this, ForecastError); \n  this.errors = errors;\n}\n\nutil.inherits(ForecastError, Error); \n\nForecastError.prototype.toString = function toString (){\n  return \"ForecastError: \" + this.errors;\n}\n\nfunction Forecast (options) {\n  if ( ! options) throw new ForecastError('APIKey must be set on Forecast options');\n  if ( ! options.APIKey) throw new ForecastError('APIKey must be set on Forecast options');\n  this.APIKey = options.APIKey;\n  this.url = 'https://api.forecast.io/forecast/' + options.APIKey + '/';\n}\n\nForecast.prototype.get = function get (latitude, longitude, options, callback) { \n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  var url = this.url + latitude + ',' + longitude;\n\n  var query = _.reduce(options, function (result, val, key) {\n    if (result) return result + ',' + key + '=' + val;\n    return result + '?' + key + '=' + val;\n  }, '');\n\n  url += query;\n\n  log('get ' + url);\n\n  request.get(url, function (err, res, data) {\n    if (err) { \n      callback(err);\n    } else {\n      data = JSON.parse(data);\n      callback(null, res, data);\n    }\n  });\n};\n\nForecast.prototype.getAtTime = function getAtTime (latitude, longitude, time, options, callback) { \n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  \n  var url = this.url + latitude + ',' + longitude + ',' + time;\n\n  var query = _.reduce(options, function (result, val, key) {\n    if (result) return result + ',' + key + '=' + val;\n    return result + '?' + key + '=' + val;\n  }, '');\n\n  url += query;\n\n  log('get ' + url);\n\n  request.get(url, function (err, res, data) {\n    if (err) { \n      callback(err);\n    } else {\n      data = JSON.parse(data);\n      callback(null, res, data);\n    }\n  });\n};\n\nmodule.exports = Forecast;"]],"start1":0,"start2":0,"length1":0,"length2":1971}]],"length":1971}
{"ts":1368535637190,"patch":[[{"diffs":[[0,"eturn result + '"],[-1,","],[1,"&"],[0,"' + key + '=' + "]],"start1":997,"start2":997,"length1":33,"length2":33},{"diffs":[[0,"n result + '"],[-1,","],[1,"&"],[0,"' + key + '="]],"start1":1641,"start2":1641,"length1":25,"length2":25}]],"length":1971,"saved":false}
